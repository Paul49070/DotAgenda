<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtn">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Font}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="/Font/#Poppins"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent">
                                <TextBlock x:Name="text" Text="{TemplateBinding Content}" Padding="5" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="text" Value="{DynamicResource Font_Grey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtnContrast">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Font}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="/Font/#Poppins"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent">
                                <TextBlock x:Name="text" Text="{TemplateBinding Content}" Padding="5" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="text" Value="{DynamicResource Contrast}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtnList">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}">
                            <Border Background="Transparent" Name="bd" HorizontalAlignment="Stretch" BorderThickness="0" BorderBrush="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtnListHover">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="{DynamicResource OpacityPopupBG}" CornerRadius="20" Name="bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource OpacityPopupBG}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtnListDrop">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch">
                                <Border.BorderBrush>
                                    <DrawingBrush Viewport="0,0,33,33" ViewportUnits="Absolute" TileMode="Tile">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="#40FFFFFF">
                                                    <GeometryDrawing.Geometry>
                                                        <GeometryGroup>
                                                            <RectangleGeometry Rect="0,0,50,50" />
                                                            <RectangleGeometry Rect="50,50,50,50" />
                                                        </GeometryGroup>
                                                    </GeometryDrawing.Geometry>
                                                </GeometryDrawing>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Border.BorderBrush>
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BasiqueBtnListSearch">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" HorizontalAlignment="Stretch">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource Font_Grey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BtnForm">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Font}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="/Font/#Poppins"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" CornerRadius="5">
                                <TextBlock x:Name="text" Text="{TemplateBinding Content}" Padding="5" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="text" Value="{DynamicResource Contrast}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="AdvancedBtn">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Font_Grey}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="/Font/#Poppins"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <TextBlock x:Name="text" Text="Avancée" Padding="5" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                                    <Path x:Name="arrow"  Grid.Column="2" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{TemplateBinding Foreground}" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                </StackPanel>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="text" Value="{DynamicResource Contrast}"/>
                                <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource Contrast}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PopupButton">
        <Setter Property="Width" Value="auto" />
        <Setter Property="Margin" Value="10,10,0,10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="FontFamily" Value="/Font/#Poppins"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" >
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="PopupButtonv2">
        <Setter Property="Width" Value="auto" />
        <Setter Property="Margin" Value="10,10,0,10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="auto" />
        <Setter Property="FontFamily" Value="/Font/#Poppins"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0,0,0,0" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="contentPresenter" 
                                                  Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="BtnIcon">
        <Style.Setters>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Font}"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="/Font/#Poppins"/>
            <Setter Property="MaxHeight" Value="20"/>
            <Setter Property="MaxWidth" Value="20"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid HorizontalAlignment="stretch" VerticalAlignment="Stretch">
                            <Border Background="Transparent" HorizontalAlignment="Center">
                                <wpf:PackIcon x:Name="text" Kind="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                              Height="{TemplateBinding MaxHeight}" Width="{TemplateBinding MaxWidth}" Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="text" Value="{DynamicResource Font_Grey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style.Setters>
    </Style>
</ResourceDictionary>